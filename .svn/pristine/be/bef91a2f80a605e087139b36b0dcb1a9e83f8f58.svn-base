--LayerDeskRule.lua
local AppConfig = require("AppConfig")
local CCButton = require("FFSelftools/CCButton")

local LayerDeskRule=class("LayerDeskRule",function()
        return CCLayer:create()
    end)

local AppConfig = require("AppConfig")
local FriendGameLogic = require("Lobby/FriendGame/FriendGameLogic")


function LayerDeskRule:init(backfunc) 
    local gameId = CCUserDefault:sharedUserDefault():getIntegerForKey("PHZ_GameId")
    gameId = (gameId == 0) and 15 or gameId
    FriendGameLogic.getFriendTableRule(10, function(bSucceed)
        backfunc(bSucceed)

        if bSucceed then
            self.game_rule = {}
            self.game_rule[gameId] = FriendGameLogic.game_rule

            self.data_index = FriendGameLogic.readDeskRule() or {1, 1, 1, 2, 2, 1, 2}

            self.desk_index = self.data_index[1]
            
            self.gameId = gameId
            
            self:initDaimondRule(self.gameId) 
            self:initGameRule()  
        end
    end, gameId)                     
end

function LayerDeskRule:initDaimondRule(gameId)
    --二层背景
    local panelBg = loadSprite("common/popBorder.png", true)
    panelBg:setPreferredSize(CCSizeMake(270, 440))
    panelBg:setPosition(ccp(1060, 455))
    self:addChild(panelBg) 

    local function addTipTtf(pos, ftsz, ancpos, tip)
        local labItem = CCLabelTTF:create(tip, AppConfig.COLOR.FONT_BLACK, ftsz)
        labItem:setColor(AppConfig.COLOR.MyInfo_Record_Label)        
        labItem:setHorizontalAlignment(kCCTextAlignmentLeft)
        labItem:setAnchorPoint(ancpos)
        labItem:setPosition(pos)
        panelBg:addChild(labItem)

        return labItem
    end

    local tipPay = "3人支付"
    if gameId == 16 then tipPay = "4人支付" end
    
    --支付方式
    addTipTtf(ccp(20, 400), 36, ccp(0, 0.5), "支付方式：")
    local fourLab = addTipTtf(ccp(20, 330), 32, ccp(0, 0.5), tipPay)
    addTipTtf(ccp(20, 250), 32, ccp(0, 0.5), "1人支付")
    local fourBtn, oneBtn
    --选择按钮
    fourBtn = self.layer_super:addCheckBox("", "", ccp(240, 330), panelBg, self.layer_zIndex,
                            function(index, markSp) 
                                oneBtn:getChildByTag(10):setVisible(false)
                                markSp:setVisible(true) 
                                FriendGameLogic.pay_type = 60
                                self:updataDiamondTTf() end, FriendGameLogic.pay_type ~= 50)
    oneBtn = self.layer_super:addCheckBox("", "", ccp(240, 250), panelBg, self.layer_zIndex,
                            function(index, markSp)                                 
                                fourBtn:getChildByTag(10):setVisible(false)
                                markSp:setVisible(true) 
                                FriendGameLogic.pay_type = 50 
                                self:updataDiamondTTf() end, FriendGameLogic.pay_type == 50)

    addTipTtf(ccp(20, 170), 26, ccp(0, 0.5), "所需钻石")
    addTipTtf(ccp(20, 100), 26, ccp(0, 0.5), "剩余钻石")
    local daimondTtf, tips = {}, {"", ""..require("Lobby/Login/LoginLogic").UserInfo.DiamondAmount}

    for i=1,2 do
        local pos = ccp(170, 240 - 70 * i)

        local tifmark = loadSprite("gamerule/blackBg.png", true)
        tifmark:setPreferredSize(CCSizeMake(80, 42))
        tifmark:setPosition(pos)
        panelBg:addChild(tifmark)

        local labItem = CCLabelTTF:create(tips[i], AppConfig.COLOR.FONT_BLACK, 26)
        labItem:setPosition(pos)
        panelBg:addChild(labItem)

        local daimondmark = loadSprite("common/diamond.png")
        daimondmark:setPosition(ccp(240, pos.y))
        daimondmark:setScale(0.8)
        panelBg:addChild(daimondmark)

        table.insert(daimondTtf, labItem)
    end

    self.diamond_lab = daimondTtf[1]

    addTipTtf(ccp(140, 30), 30, ccp(0.5, 0.5), "底分：1")

    --提示信息
    local tipmsg = CCLabelTTF:create(AppConfig.TIPTEXT.Tip_FriendDiamond_Msg_New, AppConfig.COLOR.FONT_BLACK, 18)      
    tipmsg:setPosition(ccp(140, -130))
    tipmsg:setColor(ccc3(250,55,55))
    panelBg:addChild(tipmsg)

    if AppConfig.ISAPPLE then
        fourLab:setVisible(false)
        fourBtn:setVisible(false)
    end
end

function LayerDeskRule:initGameRule()
    local HallUtils = require("HallUtils")

    --二层背景
    local panelBg = loadSprite("common/popBorder.png", true)
    panelBg:setPreferredSize(CCSizeMake(905, 588))
    panelBg:setPosition(ccp(462, 380))
    self:addChild(panelBg) 

    if not self:addGameRuleType(panelBg) then
        return
    end

    if self.gameType < 1 then
        self:initCZZPRule(panelBg)
    elseif self.gameType < 2 then
        self:initMHZRule(panelBg)
    elseif self.gameType < 3 then
        self:initLWZPRule(panelBg)        
    end
end

--郴州字牌
function LayerDeskRule:initCZZPRule(panelBg)
    local items, tips = {}, {"局数：", "人数：", "必胡：", "息囤：", ""}

    --局数、玩法、可选
    for i,v in ipairs(tips) do
        local tipsp = CCLabelTTF:create(v, AppConfig.COLOR.FONT_BLACK, 40)
        tipsp:setColor(AppConfig.COLOR.MyInfo_Record_Label)

        local item, lineSp = self.layer_super:addCommonItem(tipsp, panelBg, i)
        item:setPosition(ccp(2, 590 - 90 * i - 65))
        table.insert(items, item)
    end    

    --局数
    local countConfig = FriendGameLogic.game_rule.count
    local msgs = {{}, {}}
    local tips = {{}, {}}
    for i,v in ipairs(countConfig) do
        table.insert(msgs[1], v.."局")
        table.insert(tips[1], "")
    end
    --局数
    local uis, poses, nNumber = {}, {ccp(170, 45), ccp(450, 45), ccp(700, 45)}, self.data_index[1]
    self.layer_super:addCheckGroup(msgs[1], tips[1], poses, items[1], self.layer_zIndex, uis, 
                function(index)
                    self:updataDiamondTTf(index)                    
                end, nNumber)  

    --人数玩法
    self.player_group = {}
    self.player_last = self.data_index[2]

    if self.data_index[2] == 1 then
        self.layer_super:addCheckGroup({"3人(9息起胡)", "4人"}, {"", ""}, {poses[1], poses[2]}, items[2], self.layer_zIndex, self.player_group, 
                    function(index) 
                        self:changeGameType(index)
                    end, self.data_index[2])       
    else
        self.layer_super:addCheckGroup({"3人", "4人(起胡"}, {"", ""}, {poses[1], poses[2]}, items[2], self.layer_zIndex, self.player_group, 
                    function(index) 
                        self:changeGameType(index)
                    end, self.data_index[2])

        --新增胡息选择
        self.huxi_group = {}
        self.data_index[8] = self.data_index[8] or 1
        self.layer_super:addCheckGroup({"3息", "6息)"}, {"", ""}, {ccp(642, 45), ccp(746, 45)}, items[2], self.layer_zIndex, self.huxi_group, 
                    function(index)                     
                        self.data_index[8] = index 
                    end, self.data_index[8])                                             
    end

    --息囤玩法
    self.tui_group = {}
    self.layer_super:addCheckGroup({"3/1", "1/1"}, {"3胡息转换1囤", "1胡息转换1囤"}, {poses[1], poses[2]}, items[4], self.layer_zIndex, self.tui_group, 
                function(index)                     
                    self.data_index[3] = index 
                end, self.data_index[3])

    --点炮必胡、有胡必胡
    local huIndex = 1
    if self.data_index[5] > 1 then
        huIndex = 2
    elseif self.data_index[6] > 1 then
        huIndex = 3
    end
    self.hu_group = {}
    self.layer_super:addCheckGroup({"无", "点炮必胡", "有胡必胡"}, {"胡牌时可以过胡", "点炮时不能过胡", "胡牌时不能过胡"}, poses, items[3], self.layer_zIndex, self.hu_group, 
                function(index)
                    self.data_index[5] = 1
                    self.data_index[6] = 1
                    if index > 1 then
                        self.data_index[5 + index - 2] = index 
                    end
                end, huIndex)

    --飘
    self.piaoBtn = self.layer_super:addCheckBox("飘5分", "第二局可以选择不飘或\n飘5分", poses[1], items[5], self.layer_zIndex,
                                function(index) 
                                    self.data_index[7] = index + 1
                                end, self.data_index[7] > 1)
end

--毛胡子
function LayerDeskRule:initMHZRule(panelBg)
    local items, tips = {}, {"局数：", "人数：", "必胡：", "息囤：", ""}

    --局数、玩法、可选
    for i,v in ipairs(tips) do
        local tipsp = CCLabelTTF:create(v, AppConfig.COLOR.FONT_BLACK, 40)
        tipsp:setColor(AppConfig.COLOR.MyInfo_Record_Label)

        local item, lineSp = self.layer_super:addCommonItem(tipsp, panelBg, i)
        item:setPosition(ccp(2, 590 - 90 * i - 65))
        table.insert(items, item)
    end    

    --局数
    local countConfig = FriendGameLogic.game_rule.count
    local msgs = {{}, {}}
    local tips = {{}, {}}
    for i,v in ipairs(countConfig) do
        table.insert(msgs[1], v.."局")
        table.insert(tips[1], "")
    end
    --局数
    local uis, poses, nNumber = {}, {ccp(170, 45), ccp(450, 45), ccp(700, 45)}, self.data_index[1]
    self.layer_super:addCheckGroup(msgs[1], tips[1], poses, items[1], self.layer_zIndex, uis, 
                function(index)
                    self:updataDiamondTTf(index)                    
                end, nNumber)  

    --人数玩法
    self.player_group = {}
    self.player_last = self.data_index[2]

    self.layer_super:addCheckGroup({"4人(3息起胡)"}, {""}, {poses[1]}, items[2], self.layer_zIndex, self.player_group, 
                function(index) end, 1)
    self.data_index[8] = 1 

    --毛胡玩法
    local maoindex = self.data_index[9] or 1
    self.maoBtn = self.layer_super:addCheckBox("毛胡", "没有胡息时胡牌", poses[1], items[5], self.layer_zIndex,
                                function(index) 
                                    self.data_index[9] = index + 1
                                end, maoindex > 1)

    --息囤玩法
    self.tui_group = {}
    self.layer_super:addCheckGroup({"3/1", "1/1"}, {"3胡息转换1囤", "1胡息转换1囤"}, {poses[1], poses[2]}, items[4], self.layer_zIndex, self.tui_group, 
                function(index)                     
                    self.data_index[3] = index 
                end, self.data_index[3])

    --点炮必胡、有胡必胡
    local huIndex = 1
    if self.data_index[5] > 1 then
        huIndex = 2
    elseif self.data_index[6] > 1 then
        huIndex = 3
    end
    self.hu_group = {}
    self.layer_super:addCheckGroup({"无", "点炮必胡", "有胡必胡"}, {"胡牌时可以过胡", "点炮时不能过胡", "胡牌时不能过胡"}, poses, items[3], self.layer_zIndex, self.hu_group, 
                function(index)
                    self.data_index[5] = 1
                    self.data_index[6] = 1
                    if index > 1 then
                        self.data_index[5 + index - 2] = index 
                    end
                end, huIndex)

    --飘
    self.piaoBtn = self.layer_super:addCheckBox("飘5分", "第二局可以选择不飘或\n飘5分", poses[2], items[5], self.layer_zIndex,
                                function(index) 
                                    self.data_index[7] = index + 1
                                end, self.data_index[7] > 1)
end

--临武字牌
function LayerDeskRule:initLWZPRule(panelBg)
    local items, tips, sStart = {}, {"局数：", "人数：", "必胡：", "息囤：", ""}, 3
    if self.data_index[2] == 1 then
        tips = {"局数：", "人数：", "牌数：", "必胡：", "息囤：", ""}
        sStart = 4
    end

    --局数、玩法、可选
    for i,v in ipairs(tips) do
        local tipsp = CCLabelTTF:create(v, AppConfig.COLOR.FONT_BLACK, 40)
        tipsp:setColor(AppConfig.COLOR.MyInfo_Record_Label)

        local item, lineSp = self.layer_super:addCommonItem(tipsp, panelBg, i)
        item:setPosition(ccp(2, 590 - 90 * i - 65))
        table.insert(items, item)
    end    

    --局数
    local countConfig = FriendGameLogic.game_rule.count
    local msgs = {{}, {}}
    local tips = {{}, {}}
    for i,v in ipairs(countConfig) do
        table.insert(msgs[1], v.."局")
        table.insert(tips[1], "")
    end
    --局数
    local uis, poses, nNumber = {}, {ccp(170, 45), ccp(450, 45), ccp(700, 45)}, self.data_index[1]
    self.layer_super:addCheckGroup(msgs[1], tips[1], poses, items[1], self.layer_zIndex, uis, 
                function(index)
                    self:updataDiamondTTf(index)                    
                end, nNumber)  

    --人数玩法
    self.player_group = {}
    self.player_last = self.data_index[2]
    self.layer_super:addCheckGroup({"3人", "4人(3息起胡)"}, {"", ""}, {poses[1], poses[2]}, items[2], self.layer_zIndex, self.player_group, 
                function(index) 
                    self:changeGameType(index)
                end, self.data_index[2]) 

    --息囤玩法
    self.tui_group = {}
    self.layer_super:addCheckGroup({"3/1", "1/1"}, {"3胡息转换1囤", "1胡息转换1囤"}, {poses[1], poses[2]}, items[sStart + 1], self.layer_zIndex, self.tui_group, 
                function(index)                     
                    self.data_index[3] = index 
                end, self.data_index[3])

    --点炮必胡、有胡必胡
    local huIndex = 1
    if self.data_index[5] > 1 then
        huIndex = 2
    elseif self.data_index[6] > 1 then
        huIndex = 3
    end
    self.hu_group = {}
    self.layer_super:addCheckGroup({"无", "点炮必胡", "有胡必胡"}, {"胡牌时可以过胡", "点炮时不能过胡", "胡牌时不能过胡"}, poses, items[sStart], self.layer_zIndex, self.hu_group, 
                function(index)
                    self.data_index[5] = 1
                    self.data_index[6] = 1
                    if index > 1 then
                        self.data_index[5 + index - 2] = index 
                    end
                end, huIndex)

    --毛胡玩法
    local maoindex = self.data_index[9] or 1
    self.maoBtn = self.layer_super:addCheckBox("毛胡", "没有胡息时胡牌", poses[1], items[sStart + 2], self.layer_zIndex,
                                function(index) 
                                    self.data_index[9] = index + 1
                                end, maoindex > 1)
    self.data_index[9] = maoindex

    --红黑胡玩法
    local heiindex = self.data_index[10] or 1
    self.heiBtn = self.layer_super:addCheckBox("红黑胡", "有胡息的句全是红字或\n黑字时胡牌", poses[2], items[sStart + 2], self.layer_zIndex,
                                function(index) 
                                    self.data_index[10] = index + 1
                                end, heiindex > 1)
    self.data_index[10] = heiindex

    if sStart == 4 then
        local function updataPlayerGroup(gIndex)
            for k,v in pairs(self.player_group) do
                v:removeFromParentAndCleanup(true)
            end
            local huTips = {{"3人(9息起胡)", "4人(3息起胡)"}, {"3人(3息起胡)", "4人(3息起胡)"}}
            self.player_group = {}
            self.player_last = self.data_index[2]
            self.layer_super:addCheckGroup(huTips[gIndex], {"", ""}, {poses[1], poses[2]}, items[2], self.layer_zIndex, self.player_group, 
                        function(index) 
                            self:changeGameType(index)
                        end, self.data_index[2])            
        end    

        --21、15张玩法
        local zindex = self.data_index[11] or 1
        self.data_index[11] = zindex        
        self.zhang_group = {}
        self.layer_super:addCheckGroup({"21/20张", "15/14张"}, {"庄家21张手牌\n闲家20张手牌", "庄家15张手牌\n闲家14张手牌"}, poses, items[sStart - 1], self.layer_zIndex, self.zhang_group, 
                    function(index)
                        updataPlayerGroup(index)
                        self.data_index[11] = index
                    end, zindex)
        updataPlayerGroup(zindex)                                    
    end

    --飘
    self.piaoBtn = self.layer_super:addCheckBox("飘5分", "第二局可以选择不飘或\n飘5分", poses[3], items[sStart + 2], self.layer_zIndex,
                                function(index) 
                                    self.data_index[7] = index + 1
                                end, self.data_index[7] > 1)
end

function LayerDeskRule:changeGameType(index)
    if self.player_last == index then return end

    --恢复
    if self.player_group and self.player_group[self.player_last] then
        local tempbtn = self.player_group[self.player_last]
        tempbtn.m_actionCallBack(tempbtn:getTag(), tempbtn)
    end

    local gameId = index + 14

    --更新
    local function changePlayer()
        self:removeAllChildrenWithCleanup(true)

        self.data_index[2] = index
        self.gameId = gameId

        self:initDaimondRule(self.gameId) 
        self:initGameRule()
    end

    if self.game_rule[gameId] then
        FriendGameLogic.game_rule = self.game_rule[gameId]
        FriendGameLogic.game_id = gameId
        
        changePlayer()
    else
        FriendGameLogic.getFriendTableRule(10, function(bSucceed)
            if bSucceed then
                self.game_rule[gameId] = FriendGameLogic.game_rule
                changePlayer()
            end
        end, gameId)
    end    
end

function LayerDeskRule:addGameRuleType(super)
    local gameType = CCUserDefault:sharedUserDefault():getIntegerForKey("PHZ_Type")
    self.gameType = gameType

    local function checkGameType(typeID)
        local tempId = self.gameId
        if typeID == 1 then
            --毛胡子：四人模式
            self.data_index[2] = 2
            self.gameId = 16
        end

        CCUserDefault:sharedUserDefault():setIntegerForKey("PHZ_Type", typeID)

        if tempId ~= self.gameId then
            self:changeGameType(self.data_index[2])
            return false
        end

        return true
    end

    local titles, gameTypes = {"郴州字牌", "毛胡子", "临武字牌", "碰胡子"}
    gameTypes = self.layer_super:addGameTypeTitle(super, titles, function(index)
        if checkGameType(index - 1) then
            super:removeFromParentAndCleanup(true)
            self:initGameRule()
        end
    end, gameType + 1)

    local unOpen = gameTypes[#titles]
    local s = loadSprite("gamerule/createRuleMark2.png")
    local bgsz = unOpen.m_normalSp:getContentSize()
    s:setPosition(ccp(bgsz.width / 2 - 40,2))
    unOpen:addChild(s)
    unOpen.m_actionCallBack = function() require("HallUtils").showWebTip("即将开放，敬请期待") end 

    if AppConfig.APPLESTATU < 2 then
        --服务器未更新
        gameTypes[2].m_actionCallBack = function() require("HallUtils").showWebTip("服务即将开放") end 
        gameTypes[3].m_actionCallBack = function() require("HallUtils").showWebTip("服务即将开放") end 
    end
    return checkGameType(gameType)
end

function LayerDeskRule:updataDiamondTTf(index)
    --游戏局数
    self.desk_index = index or self.desk_index
    self.data_index[1] = self.desk_index

    -- 局数选择值
    local cKey = FriendGameLogic.game_rule.count[self.data_index[1]]
    -- 支付模式选择值
    local pKey = FriendGameLogic.pay_type == 60 and "mult" or "single"
    -- 玩法(飘)选择值
    local rKey = self.data_index[7]
    
    -- 价格配置
    local priceConfig = FriendGameLogic.game_rule.price[cKey][pKey]
    -- 基础价格
    local basePrice = priceConfig.base
    -- 玩法附加价格(1为无玩法-不漂)
    local addonPrice = rKey > 1 and priceConfig["r"..rKey-1] or 0
    -- 如果没有玩法附加价格定义则默认为0
    addonPrice = addonPrice or 0
    -- 最终价格(单人需消耗的钻石)
    local price = basePrice + addonPrice
    self.diamond_lab:setString(tostring(price))     
end

--获取游戏规则
function LayerDeskRule:getGameRule()
    local diamond = tonumber(self.diamond_lab:getString())

    if require("Lobby/Login/LoginLogic").UserInfo.DiamondAmount < diamond then
        local hall_layer = require("LobbyControl").hall_layer
        if hall_layer then
            require("Lobby/Common/LobbySecondDlg").putTip(
                hall_layer, 10, AppConfig.TIPTEXT.Tip_Diamond_Tip,
                function() hall_layer:returnMainPanle(function() hall_layer:showStorePanel() end) end,
                function() end
            ):show()
        end
        return
    end
    FriendGameLogic.my_rule = {}
    
    --局数
    table.insert(FriendGameLogic.my_rule, {2, FriendGameLogic.game_rule.count[self.data_index[1]]})

    --人数
    table.insert(FriendGameLogic.my_rule, {3, self.data_index[2]})

    --息囤
    cclog("息囤 "..self.data_index[3]..";"..#FriendGameLogic.my_rule)
    table.insert(FriendGameLogic.my_rule, {4, self.data_index[3]})

    --点炮必胡、有胡必胡
    for i=5,6 do
        if self.data_index[i] > 1 then 
            table.insert(FriendGameLogic.my_rule, {i + 1, 1}) 
        end
    end

    --胡息选择
    if self.gameId == 16 and self.gameType < 1 then 
        if self.data_index[8] then
            --四人模式息囤选择
            table.insert(FriendGameLogic.my_rule, {9, self.data_index[8]}) 
        end        
    end

    --四人毛胡子、临武字牌选择毛胡
    if (self.gameId == 16 and self.gameType == 1) 
        or self.gameType == 2 then 
        if self.data_index[9] and self.data_index[9] > 1 then
            --毛胡选择
            table.insert(FriendGameLogic.my_rule, {10, 1}) 
        end        
    end

    --临武字牌
    if self.gameType == 2 then 
        if self.data_index[10] and self.data_index[10] > 1  then
            --红黑胡
            table.insert(FriendGameLogic.my_rule, {11, 1}) 
        end

        local zhIndex = self.data_index[11]
        local zCounts = {21, 15}
        if self.gameId == 15 and zhIndex and zhIndex > 0 then
            --三人张数
            table.insert(FriendGameLogic.my_rule, {12, zCounts[zhIndex]}) 
        end                
    end

    --游戏类别
    table.insert(FriendGameLogic.my_rule, {50, self.gameType}) 


    --飘
    if self.data_index[7] > 1 then table.insert(FriendGameLogic.my_rule, {100, 1}) end


    FriendGameLogic.writeDeskRule(self.data_index)
    FriendGameLogic.enterGameRoom()

    CCUserDefault:sharedUserDefault():setIntegerForKey("PHZ_GameId", self.gameId)    
end

function LayerDeskRule.getInviteMsg()
    local roominfo = require("cjson").encode({InviteCode = FriendGameLogic.invite_code, GameID = PAOHUZI_TAG_GAME})

    local ruletext, roomtext = LayerDeskRule.getRuleText()
    local title = "（"..roomtext.."）"..PAOHUZI_NAME_GAME.."@你"

    local rulemsg = ruletext --.."，"..birdtext

    --支付方式
    local paytype = "房主付费"
    if FriendGameLogic.pay_type == 60 then
        paytype = "多人付费"
    end

    return "【"..paytype.."】 "..
            FriendGameLogic.my_rule[1][2].."局，"..rulemsg.."。快来切磋一下吧！", title, roominfo

end

function LayerDeskRule.getRuleText()
    local roomtext = "房间号："..tostring(FriendGameLogic.invite_code) --..CommonInfo.Game_Name.."："    
    local gameNames = {"郴州字牌", "毛胡子", "临武字牌"}
    --游戏类别
    local modeIndex = FriendGameLogic.getRuleValueByIndex(50)

    --游戏名称
    local ruletext = gameNames[modeIndex + 1]
    --胡息信息
    if modeIndex == 0 then
        if FriendGameLogic.my_rule[2][2] == 2 then
            local minHuxi = FriendGameLogic.getRuleValueByIndex(9)
            minHuxi = minHuxi > 0 and minHuxi or 1

            ruletext = ruletext.."，4人("..(minHuxi * 3).."息起胡)"
        else
            ruletext = ruletext.."，3人(9息起胡)"
        end        
    end

    --毛胡
    local valueIndex = FriendGameLogic.getRuleValueByIndex(10)
    if valueIndex > 0 then ruletext = ruletext.."，毛胡" end

    --红黑胡
    valueIndex = FriendGameLogic.getRuleValueByIndex(11)
    if valueIndex > 0 then ruletext = ruletext.."，红黑胡" end

    --手牌张数
    valueIndex = FriendGameLogic.getRuleValueByIndex(12)
    if valueIndex > 0 then ruletext = ruletext.."，"..valueIndex.."/"..(valueIndex - 1).."张" end
    
    --息囤转换
    local tips = {"息囤转换3/1", "息囤转换1/1"}
    valueIndex = FriendGameLogic.getRuleValueByIndex(4)
    ruletext = ruletext.."，"..tips[valueIndex]
    
    --点炮必胡
    valueIndex = FriendGameLogic.getRuleValueByIndex(6)
    if valueIndex > 0 then ruletext = ruletext.."，点炮必胡" end

    --有胡必胡
    valueIndex = FriendGameLogic.getRuleValueByIndex(7)
    if valueIndex > 0 then ruletext = ruletext.."，有胡必胡" end

    --飘
    valueIndex = FriendGameLogic.getRuleValueByIndex(100)
    if valueIndex > 0 then ruletext = ruletext.."，飘5分" end

    return ruletext, roomtext
end

function LayerDeskRule.put(super, zindex, backfunc)
    local layer = LayerDeskRule.new()
    layer.layer_zIndex = zindex
    layer.layer_super = super
    super.panel_bg:addChild(layer, zindex)
    layer:setPosition(ccp(20, -50))

    layer:init(backfunc)
    return layer
end

 return LayerDeskRule